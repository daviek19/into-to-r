##Creating a dataframe
Name<-c("Shelmith","Steve","Mike","Kyalo","Victor","Dennis","Tabitha","Betty","John","Cindy","Mukundi","Kimberly","Edward","Juliet")
Name
County<-c("Nyeri","Homabay","Nyeri","Makueni","Kampala","Meru","Kiambu","Vihiga","Kiambu","Machakos","Nakuru"," Makueni","Kiambu","Kericho")
County
Gender<-c("Female","Male","Male","Male","Male","Male","Female","Female","Male","Female","Male","Female","Male","Female")
Gender
Salary<-c(10000,27000,15000,82000,64500,75000,37000,99999,50000,70000,99000,80000,10000,20000)
Salary
##Payroll is the name of the data set that will consist the number of items on the frame
Payroll<-data.frame(Name,County,Gender,Salary)
Payroll
##To find out the number of rows and columns on the dataset using the function nrow(dataname)
nrow(Payroll)
ncol(Payroll)
##To get the names of the dataset
names(Payroll)
##Finding out what seq does
?seq
###Seq(From,to,by)
##Using head
head(Payroll,n=5)
##Usinf tail
tail(Payroll,n=-5)
tail(Payroll,n=5)
tail(Payroll,n=9)
tail(Payroll,n=-9)
##Using indexing in a dataframe using the formula df[i,j] i is the row and j is the column
Payroll[8,2]
a<-Payroll[14,2]
a
##Extracting county column from payroll using the $ sign
which(Payroll$County=="Nyeri")
df[Payroll]
##Creating a dataframe
Name<-c("Shelmith","Steve","Mike","Kyalo","Victor","Dennis","Tabitha","Betty","John","Cindy","Mukundi","Kimberly","Edward","Juliet")
Name
County<-c("Nyeri","Homabay","Nyeri","Makueni","Kampala","Meru","Kiambu","Vihiga","Kiambu","Machakos","Nakuru"," Makueni","Kiambu","Kericho")
County
Gender<-c("Female","Male","Male","Male","Male","Male","Female","Female","Male","Female","Male","Female","Male","Female")
Gender
Salary<-c(10000,27000,15000,82000,64500,75000,37000,99999,50000,70000,99000,80000,10000,20000)
Salary
##Payroll is the name of the data set that will consist the number of items on the frame
Payroll<-data.frame(Name,County,Gender,Salary)
Payroll
install.packages("dplyr")
Nyeri_county <- Payroll [Payroll$County == "Nyeri" , ]
Nyeri_county
Nyeri_county2
Nyeri_county2 <- Payroll %>% filter(County == "Nyeri")
Nyeri_county2 <- Payroll %>% filter(County == "Nyeri")
Nyeri_county2
Nyeri_county2 <- Payroll %>% filter(County == "Nyeri")
Nyeri_county2
library(dplyr)
Nyeri_county2 <- Payroll %>% filter(County == "Nyeri")
Nyeri_county2
NewData <- Nyeri_county2 %>% select(Name,Gender,Salary)
NewData
Paid70Above <- Payroll %>% filter(Salary >= 70000)
Paid70Above
Paid70Above <- Payroll %>% filter(Salary >= 70000)%>% select(Name)
Paid70Above
Paid70Above <- Payroll %>% filter(Salary >= 70000) %>% select(Name,County)
Paid70Above
Paid70AboveFrmNyeri <- Payroll %>% filter(County == "Nyeri" && Salary >= 70000) %>% select(Name,County)
Paid70AboveFrmNyeri
Payroll
Paid70Above <- Payroll %>% filter(Salary >= 70000) %>% select(Name,County)
Paid70Above
Paid70AboveFrmNyeri <- Payroll %>% filter(County == "Nyeri" && Salary >= 100000) %>% select(Name,County)
Paid70AboveFrmNyeri
Paid70AboveFrmNyeri <- Payroll %>% filter(County == "Nyeri" & Salary >= 100000) %>% select(Name,County)
Paid70AboveFrmNyeri
Paid70Above <- Payroll %>% filter(Salary >= 70000) %>% select(Name,County,Salary)
Paid70Above
Paid70AboveFrmNyeri <- Payroll %>% filter(County == "Nyeri" & Salary >= 10000) %>% select(Name,County)
Paid70AboveFrmNyeri
Paid70AboveFrmNyeri <- Payroll %>% filter(County == "Nyeri" & Salary > 10000) %>% select(Name,County)
Paid70AboveFrmNyeri
Paid70AboveFrmNyeri <- Payroll %>% filter(County == "Nyeri" & Salary > 10000) %>% select(Name,County,Salary)
Paid70AboveFrmNyeri
Paid70AboveFrmNyeri <- Payroll %>% filter(County == "Nyeri" && Salary > 10000) %>% select(Name,County,Salary)
Paid70AboveFrmNyeri
Payroll
Females50kAbove
#Generate a dataset of all females who earn 50k and above
Females50kAbove <- Payroll %>% filter(Gender == "Female" & Salary > 50000)
Females50kAbove
#Generate a dataset of all females who earn 50k and above
Females50kAbove <- Payroll %>% filter(Gender == "Female" & Salary > 50000)  %>% select(Name,County,Salary)
Females50kAbove
#Generate a dataset of all females who earn 50k and above
Females50kAbove <- Payroll %>% filter(Gender == "Female" & Salary >= 50000)  %>% select(Name,County,Salary)
Females50kAbove
#class practice exercise - based on Wednesday March 20th class
#creating a dataframe - a dataframe is single table with rows and columns - you did this in class. Please use this exercise for practice.
#note R is case sensitive
#dataframes provide a spreadsheet like look. when analyzing data in R after loading, its much easier with the help of a dataframe structure, it is very ideal with structured data.
#here we start by creating individual vectors, which we then combine to make a dataframe
product <- c("bag", "shoes","belt","belt")
total_price <- c(500, 1000,150,200)
color <- c("blue","red","red","blue")
quantity <- c(5,2,3,4)
productdetails <- data.frame(product, total_price, color, quantity) #creates a dataframe based on the vectors created - that we specify
class(productdetails)
productdetails[,2] #this extracts the second column
product <- c("bag", "shoes","belt","belt")
total_price <- c(500, 1000,150,200)
color <- c("blue","red","red","blue")
quantity <- c(5,2,3,4)
productdetails <- data.frame(product, total_price, color, quantity) #creates a dataframe based on the vectors created - that we specify
productdetails <- data.frame(product, total_price, color, quantity) #creates a dataframe based on the vectors created - that we specify
productdetails
plot(productdetails)
plot(productdetails %>%  select(product,total_price))
library(dplyr)
plot(productdetails %>%  select(product,total_price))
library(dplyr)
productdetails
plot(productdetails %>%  select(product,total_price))
setwd("C:/Users/DMKAMAU/Desktop/data science/R/dplyr")
#set the working dir where flight data is
setwd("C:/Users/DMKAMAU/Desktop/data science/R/dplyr")
flight_data <-  read_csv("FlightData.csv")
flight_data <-  read.csv("FlightData.csv")
print(flight_data)
class(flight_data)
install.packages("lubridate")
library(lubridate)
library(lubridate)
#lubridate::as_datetime(flight_data$FlightDate)
leo <- "28-03-2019 18:3620"
x
x <- lubridate::as_datetime(flight_data$FlightDate)
str(leo)
leo2 <- dmy_hms(leo)
print(leo2)
leo2[1]
leo2[1][1]
leo2_hour
leo <- "28-03-2019 18:3620"
str(leo)
leo2 <- dmy_hms(leo)
print(leo2)
leo2_hour
leo2_hour <- day(leo2)
leo2_hour
leo2 <- dmy_hms(leo)
print(leo2)
leo2_day <- day(leo2)
leo2_day
leo_month <- month(leo)
leo_month
leo_year <- year(leo)
leo_year
leo <- "28-03-2019 18:3620"
str(leo)
leo2 <- dmy_hms(leo)
print(leo2)
str(leo2)
str(leo)
leo_dmy_hms <-  dmy_hms(leo)
leo_dmy_hms
leo_month <- month(label = true,leo)
leo_month
leo_month <- month(leo,label = true)
leo_month
leo_month <- month(leo,abbr = true,label = true)
leo_month
leo_month <- month(leo,label = true,abbr = true)
leo_month
leo_month <- month(leo,label = TRUE,abbr = TRUE)
leo_month
leo_month <- month(leo,label = TRUE,abbr = FALSE)
leo_month
leowday <- wday(leo,label=TRUE,abbr = TRUE)
leowday
flight_data$FlightDate <- dmy(flight_data$FlightDate)
leo2 <- dmy_hms(leo)
print(leo2)
str(leo2)
nested <-
data.frame(
"Name"     = c("Juliet","Mike","Betty"),
"Location" =c ("Kericho","Nyeri","Vihiga")
)
nested
mutated_nested = nested %>% mutate(
FN = if_else(Name == "Juliet","J"),
if_else(Name == "Mike","M" ),B
)
mutated_nested <-  nested %>% mutate(
FN = if_else(Name == "Juliet","J"),
if_else(Name == "Mike","M" ),B
)
mutated_nested <-  nested %>% mutate(
FN = ifelse(Name == "Juliet","J"),
ifelse(Name == "Mike","M" ),B
)
mutated_nested <- nested %>% mutate(
FN = ifelse(Name == "Juliet","J"),
ifelse(Name == "Mike","M" ),B
)
mutated_nested <- nested %>% mutate(
FN = ifelse(Name == "Juliet","J"),
ifelse(Name == "Mike","M" ),B
)
mutated_nested <- nested %>% mutate(
FN = ifelse(Name == "Juliet","J"),
ifelse(Name == "Mike","M","B" )
)
nested <-
data.frame(
"Name"     = c("Juliet","Mike","Betty"),
"Location" =c ("Kericho","Nyeri","Vihiga")
)
nested
mutated_nested <- nested %>% mutate(
FN = ifelse(Name == "Juliet","J"),
ifelse(Name == "Mike","M","B" )
)
mutated_nested <- nested %>% mutate(FN = ifelse(Name == "Juliet","J"))
nested
mutated_nested <- nested %>% mutate(FN = ifelse(Name == "Juliet","J"))
mutated_nested <- nested %>% mutate(FN = ifelse(Name == "Juliet","J",ifelse(Name="Mike","M","B")))
mutated_nested <- nested%>%mutate(FN = ifelse(Name == "Juliet","J",ifelse(Name="Mike","M","B")))
mutated_nested <- nested %>% mutate(FN = ifelse(Name == "Juliet","J",ifelse(Name="Mike","M","B")))
mutated_nested <- nested %>% mutate(FN = ifelse(Name == "Juliet","J",ifelse(Name="Mike","M","B")))
nested
mutated_nested <- nested %>%
mutate(FN=ifelse(Name == "Juliet","J",
ifelse(Name="Mike","M","B")))
nested <-
data.frame(
"Name"     = c("Juliet","Mike","Betty"),
"Location" =c ("Kericho","Nyeri","Vihiga")
)
nested
mutated_nested <- nested %>%
mutate(FN=ifelse(Name == "Juliet","J",
ifelse(Name="Mike","M","B")))
library(dplyr)
nested <-
data.frame(
"Name"     = c("Juliet","Mike","Betty"),
"Location" =c ("Kericho","Nyeri","Vihiga")
)
nested
mutated_nested <- nested %>%
mutate(FN=ifelse(Name == "Juliet","J",
ifelse(Name="Mike","M","B")))
mutated_nested <- nested %>%
mutate(FN=ifelse(Name == "Juliet","J",
ifelse(Name="Mike","M","B")))
mutated_nested <- nested %>%
mutate(FN=ifelse(Name == "Juliet","J",
ifelse(Name=="Mike","M","B")))
mutated_nested
# install  lubridate
install.packages("lubridate")
#use dplyr lib
library(dplyr)
library(lubridate)
#set the working dir where flight data is
setwd("C:/Users/DMKAMAU/Desktop/data science/R/dplyr")
#use dplyr lib
library(dplyr)
library(lubridate)
#set the working dir where flight data is
setwd("C:/Users/DMKAMAU/Desktop/data science/R/dplyr")
#Load the data set (FlightDelays.csv),
flight_data <-  read.csv("FlightData.csv")
print(flight_data)
flight_data <-  read.csv("FlightData.csv",header = TRUE)
print(flight_data)
View(flight_data)
flight_data$FlightDate <- dmy(flight_data$FlightDate)
FlightDate
flight_data$FlightDate <- dmy(flight_data$FlightDate)
#flight_data <- flight_data %>% mutate(Year = )
flight_data
flight_dates = flight_data %>% mutate(Year =year(FlightDate))
flight_dates
View(flight_dates)
flight_data <-  read.csv("FlightData.csv",header = TRUE)
print(flight_data)
flight_dates = flight_data %>% mutate(Year =year(FlightDate))
flight_dates
View(flight_data)
flight_data$FlightDate <- d(flight_data$FlightDate)
flight_data
flight_data$FlightDate <- d(flight_data$FlightDate)
flight_data$FlightDate <- day(flight_data$FlightDate)
flight_data$FlightDate <- dmy(flight_data$FlightDate)
flight_data
flight_data %>% select(FlightDate)
class(flight_data %>% select(FlightDate))
flight_data$FlightDate <- dmy(flight_data$FlightDate)
flight_data <-  read.csv("FlightData.csv",header = TRUE)
print(flight_data)
flight_data$FlightDate <- dmy(flight_data$FlightDate)
flight_dates <- flight_data %>% mutate(Year = Year(flight_data))
flight_dates <- flight_data %>% mutate(Year = month(flight_data))
flight_dates <- flight_data %>% mutate(Year = year(flight_data))
flight_dates <- flight_data %>% mutate(Year = dmy(flight_data))
#use dplyr lib
library(dplyr)
flight_dates <- flight_data %>% mutate(Year = dmy(flight_data))
flight_dates
flight_dates <- flight_data %>% mutate(Year = dmy(flight_data$FlightDate))
flight_dates <- flight_data %>% mutate(Year = dmy(flight_data$FlightDate))
flight_dates
flight_dates <- flight_data %>% mutate(Year = dmy(flight_data$FlightDate))
flight_dates
flight_data$FlightDate <- dmy(flight_data$FlightDate)
flight_data <-  read.csv("FlightData.csv",header = TRUE)
print(flight_data)
flight_dates <- flight_data %>% mutate(Year = dmy(flight_data$FlightDate))
flight_dates
flight_dates
flight_dates %>% select(FlightDate)
flight_dates[[1]]
flight_dates[[1]][1]
flight_data <-  read.csv("FlightData.csv",header = TRUE)
print(flight_data)
flight_dates <- flight_data %>% mutate(Year = dmy(flight_data$FlightDate))
flight_dates %>% select(FlightDate)
class(flight_dates)
flight_dates %>% select(FlightDate)
flight_dates
class(flight_dates)
df(flight_dates).value(0)
class(flight_dates)
flight_data <- flight_data %>% mutate(Year = dmy(flight_data$FlightDate))
flight_data
View(flight_data)
flight_data <- flight_data %>% mutate(CastYear = dmy(flight_data$FlightDate))
flight_data
View(flight_data)
flight_data <- flight_data %>% mutate(FlightDate = dmy(flight_data$FlightDate))
flight_data
View(flight_data)
flight_data <- flight_data %>%
mutate(
FlightYear = year(flight_data$FlightDate),
FlightMonth = month(flight_data$FlightDate),
FlightDay = day(flight_data$FlightDate)
)
flight_data
View(Females50kAbove)
View(flight_data)
flight_date_df <- flight_data %>% select(flight_data,FlightDate)
flight_data <-  read.csv("FlightData.csv",header = TRUE)
print(flight_data)
flight_date_df <- flight_data %>% select(flight_data,FlightDate)
flight_date_df <- flight_data %>% select(flight_data,FlightDate)
flight_data <-  read.csv("FlightData.csv",header = TRUE,stringsAsFactors = FALSE)
print(flight_data)
flight_date_df <- flight_data %>% select(flight_data,FlightDate)
flightX <- flight_data %>% select(flight_data,FlightDate)
flight_date_df <-  select(flight_data,FlightDate)
flight_date_df
flight_date_df[1]
flight_date_df[1]
head(flight_date_df)
head(flight_date_df,1)
class(head(flight_date_df,1))
str(head(flight_date_df,1))
flight_data <- flight_data %>% mutate(
FlightYear = year(flight_data$FlightDate),
FlightMonth = month(flight_data$FlightDate),
FlightDay = day(flight_data$FlightDate),
FlightAsFullDate = dmy(flight_data$FlightDate)
)
FlightAsFullDate = dmy(flight_data$FlightDate)
flight_data <- flight_data %>% mutate(
FlightYear = year(flight_data$FlightDate),
FlightMonth = month(flight_data$FlightDate),
FlightDay = day(flight_data$FlightDate),
FlightAsFullDate = dmy(flight_data$FlightDate)
)
FlightAsFullDate = dmy(flight_data$FlightDate)
flight_data <- flight_data %>% mutate(FlightAsFullDate = dmy(flight_data$FlightDate,
FlightYear = year(flight_data$FlightDate),
FlightMonth = month(flight_data$FlightDate),
FlightDay = day(flight_data$FlightDate)
)
)
